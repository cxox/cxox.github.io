<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ✧Cibert</title>
    <link>https://xoxzzz.com/post/</link>
    <description>Recent content in Posts on ✧Cibert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Jan 2021 18:53:26 +0800</lastBuildDate><atom:link href="https://xoxzzz.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git</title>
      <link>https://xoxzzz.com/p/git/</link>
      <pubDate>Sun, 24 Jan 2021 18:53:26 +0800</pubDate>
      
      <guid>https://xoxzzz.com/p/git/</guid>
      <description>Git使用 登陆 使用ssh的方式更方便
首先找到用户目录下C:/user/username/.ssh
没有就自己建
然后打开gitbash
命令
 ssh-keygen -t rsa [-C 邮箱] // 前面是生成密钥,后面的参数是加密(使用的加密算法),可以不写
 添加public公钥 git命令 第一次使用 设置全局的姓名和邮箱,可以区分是谁干了什么
git config --global user.name &amp;#34;姓名&amp;#34; git config --global user.email *********@**.com 常用命令   查看状态
git status   查看提交记录
 无参数版 git log  图形化显示分支情况 git log --graph     来 从网上其它仓库直接克隆
git clone https:// *** *** ***.git   去
 初始化 git init  都提交到暂存区 git add .</description>
    </item>
    
    <item>
      <title>我的网站可以访问了!</title>
      <link>https://xoxzzz.com/p/%E6%88%91%E7%9A%84%E7%BD%91%E7%AB%99%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%E4%BA%86/</link>
      <pubDate>Sat, 23 Jan 2021 13:14:05 +0800</pubDate>
      
      <guid>https://xoxzzz.com/p/%E6%88%91%E7%9A%84%E7%BD%91%E7%AB%99%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%E4%BA%86/</guid>
      <description>就是这样👇 </description>
    </item>
    
    <item>
      <title>Markdown</title>
      <link>https://xoxzzz.com/p/markdown/</link>
      <pubDate>Fri, 22 Jan 2021 18:18:45 +0800</pubDate>
      
      <guid>https://xoxzzz.com/p/markdown/</guid>
      <description>md 这是vscode的快捷键, vscode比较适合写markdown
   快捷键 作用     alt + v 打开编辑栏的查看   ctrl + b 左侧列表   ctrl+shift+k 删除一行    列表 + 我是谁 + 这是哪里? + 这个怎么样? + 有序列表[^1] + 大苏打 1. fedfsd 2. fsdfsD  我是谁 这是哪里? 这个怎么样? 有序列表1 大苏打  fedfsd fsdfsD    琐碎的东西 md文件可以使用html语句 &amp;lt;img src=&amp;#34;https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=3848402655,92542552&amp;amp;fm=26&amp;amp;gp=0.jpg&amp;#34;&amp;gt; 看开这里不行,不然应该在这句话上面是显示下面这张图
字体 *斜体* **粗体** ***粗斜体*** 斜体 粗体 粗斜体
引用 文章引用 &amp;gt; 鲁迅说:&amp;#34;哈哈哈 哈哈哈哈&amp;#34; 文章引用</description>
    </item>
    
    <item>
      <title>Vim</title>
      <link>https://xoxzzz.com/p/vim/</link>
      <pubDate>Fri, 22 Jan 2021 18:15:16 +0800</pubDate>
      
      <guid>https://xoxzzz.com/p/vim/</guid>
      <description>Vim 三种模式   控制模式
 i  文本编辑模式   跳转 w  跳到下一个单词   b  向左移动光标，以单词为单位   光标的移动  j 向下 k 向上 h 向左 l 向右   ^  跳转到该行的首个字符   0  跳转到该行的行首   $  跳转到该行的行尾   a  在行尾添加文字   o  新建并跳转到下一行进行输入   H  跳转到该页的头部   M  跳转到该页的中间   L  跳转到该页的底部   m[a-z]  添加标记,标记为[a-z]   &amp;lsquo;[a-z]  跳回标记处   { / }  在段落之间跳转   g  [number]gg 跳转到指定行 G 跳到文档最后   x  剪切字符 [number]x 删除number个字符   d  删除  dd 删除一行 d[number]j 向下删除number行和本行 d[number]j 向上删除number行和本行     D  删除到行尾   y  复制  yy 复制本行 y[number]y 向下复制number行     u  撤销操作   ctrl + r  恢复撤销的操作   p  粘贴  [number]p 粘贴number遍     /  搜索   替换  格式  %s/旧内容/新内容 所有内容 s/旧内容/新内容 选中的部分 后面添加 /c 会询问是否替换，可以一个一个确认     :  sp 横向分屏 vsp 纵向分屏 w 写入文件 q 退出 x 保存并退出      插入模式</description>
    </item>
    
    <item>
      <title>FirstUseBlog</title>
      <link>https://xoxzzz.com/p/firstuseblog/</link>
      <pubDate>Fri, 22 Jan 2021 13:06:39 +0800</pubDate>
      
      <guid>https://xoxzzz.com/p/firstuseblog/</guid>
      <description>this is my Blog 第一次写Blog当然是要写我的这个东西是怎么弄的了,不然以后忘记了还要到处找
用了哪些东西    构成 具体工具     存放平台 GitHub   版本工具 Git   Blog工具 hugo   主题 keepit    一些命令 首先要搭配环境变量
 新建一个Blog站点 hugo new site blog  选择主题 去themes.gohugo.io // 每一个主题的页面都有使用方法 cd themes git clone [主题地址]  本地运行 hugo server [--buildDrafts] buildDrafts是显示草稿
 新建文章 hugo new post/[文章文件夹]/[文章名字]  生成public文件夹 hugo  git相关 先到public目录下 git init git add .</description>
    </item>
    
    <item>
      <title>java 与 数据库</title>
      <link>https://xoxzzz.com/p/java-%E4%B8%8E-%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Fri, 22 Jan 2021 13:06:39 +0800</pubDate>
      
      <guid>https://xoxzzz.com/p/java-%E4%B8%8E-%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>Java 与 数据库 连接操作 加载驱动 Class.forName(); 建立连接 Connection conn = Driverment.getConnection(url,username,password); 执行 Statement stat = conn.createStatement(); 更安全的版本 -&amp;gt; prepareStatement 防止sql注入 String sql = &amp;#34;select * from student where name = ? &amp;#34;; PrepareStatement stat = conn.ptepateStatement(); stat.setString(1,sql); 提取方法 /** *Object... params 可变参数 相当于数值 */ public int executeUpdate(String sql, Object... params) throws SQLException{ int result = 0; stat = conn.prepareStatement(sql); for(int i=0;i&amp;lt;prepareStatement.length;i++){ stat.setObject(i+1;Params[i]); } result = stat.executeUpdate(); return result; } 保证事务的原子性 // try.</description>
    </item>
    
  </channel>
</rss>
